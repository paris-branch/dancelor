open Nes
open Dancelor_client_model
module Formatters = Dancelor_client_formatters

let display_warnings warnings =
  let open Dancelor_client_html in
  let display_times n =
    if n = 1 then []
    else [text " ("; text (Int.to_english_string_times n); text ")"]
  in
  let rec display_sets = function
    | [] -> []
    | (None, n) :: tl ->
      ([text "standalone"] @ display_times n)
      :: display_sets tl
    | (Some set, n) :: tl ->
      ([text "in “"; span_lwt (Formatters.Set.name set); text "”"] @ display_times n)
      :: display_sets tl
  in
  let rec format_set_list = function
    (* If the warning DuplicateVersion has been logged, the list of sets,
       and hence of html nodes generated by [display_sets] above is never empty *)
    | [] -> assert false
    | [hd] -> hd @ [text "."]
    | hd::tl -> hd @ [text ", "] @ format_set_list tl
  in
  let display_warning warning =
    match warning with
    | Book.Empty ->
      li [text "This book does not contain any set"]
    | Book.DuplicateSet set ->
      li [
        text "Set “";
        span_lwt (Formatters.Set.name set);
        text "” appears several times in this book."
      ]
    | Book.DuplicateVersion (tune, sets_opt) ->
      li (
        text "Tune “"
        :: span_lwt (Formatters.Tune.name tune)
        :: text "” appears several times: "
        :: (display_sets sets_opt |> format_set_list)
      )
    | Book.SetDanceMismatch (set, dance) ->
      li [
        text "Set “";
        span_lwt (Formatters.Set.name set);
        text "” does not have the same kind as its associated dance “";
        span_lwt (Formatters.Dance.name dance);
        text "”."
      ]
  in
  List.map display_warning warnings
