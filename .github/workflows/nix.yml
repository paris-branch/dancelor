name: Nix

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

## We specify a concurrency group with automated cancellation. This means that
## other pushes on the same `github.ref` (eg. other pushes to the same pull
## request) cancel previous occurrences of the CI.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          extra_nix_config: |
            ## Access token to avoid triggering GitHub's rate limiting.
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Build Nix environment
        run: nix develop --command true

      - name: Build Dancelor
        run: nix develop --command make

      - name: Build documentation
        run: nix develop --command make doc

      - name: Run tests
        run: nix develop --command make test

      - name: Upload GitHub pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: doc/

  deploy-documentation:
    name: Deploy documentation
    runs-on: ubuntu-latest
    needs: build-and-test

    ## Grant GITHUB_TOKEN the permissions required to make a Pages deployment.
    ## It needs to be able to deploy to pages and to verify that the deployment
    ## originates from an appropriate source.
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub pages
        uses: actions/deploy-pages@v2

  flake-checks:
    name: Flake checks
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          extra_nix_config: |
            ## Access token to avoid triggering GitHub's rate limiting.
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Run flake checks
        run: nix flake check --print-build-logs
